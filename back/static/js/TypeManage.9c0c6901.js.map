{"version":3,"sources":["webpack:///./src/components/page/post_about/TypeManage.vue?f06b","webpack:///./src/components/page/post_about/TypeManage.vue?0ed8","webpack:///src/components/page/post_about/TypeManage.vue","webpack:///./src/components/page/post_about/TypeManage.vue?b217","webpack:///./src/components/page/post_about/TypeManage.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","nativeOn","$event","type","indexOf","_k","keyCode","key","handleSearch","model","value","callback","$$v","inputKey","expression","on","handleRefresh","handleAdd","ref","postTypeList","scopedSlots","_u","fn","scope","handleEdit","$index","row","handleDelete","currentPage","pageSize","total","handlePageChange","handlePagePrev","handlePageNext","editVisible","editForm","rules","$set","slot","cancelEdit","saveEdit","addVisible","addForm","cancelAdd","saveAdd","staticRenderFns","allType","sortByPostTypeId","res","postType","getPostTypeList","$message","console","log","component"],"mappings":"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","file":"static/js/TypeManage.9c0c6901.js","sourcesContent":["export * from \"-!../../../../node_modules/@vue/cli-service/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/@vue/cli-service/node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./TypeManage.vue?vue&type=style&index=0&id=4a5f6dd3&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"crumbs\"},[_c('el-breadcrumb',{attrs:{\"separator\":\"/\"}},[_c('el-breadcrumb-item',[_c('i',{staticClass:\"el-icon-lx-cascades\"}),_vm._v(\" 帖子/楹联类型管理\\n            \")])],1)],1),_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"handle-box\"},[_c('el-input',{staticClass:\"handle-input mr10\",attrs:{\"placeholder\":\"类型名\"},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.handleSearch($event)}},model:{value:(_vm.inputKey),callback:function ($$v) {_vm.inputKey=$$v},expression:\"inputKey\"}}),_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-refresh\"},on:{\"click\":_vm.handleRefresh}},[_vm._v(\"刷新\")]),_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-search\"},on:{\"click\":_vm.handleSearch}},[_vm._v(\"搜索\")]),_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-plus\"},on:{\"click\":_vm.handleAdd}},[_vm._v(\"新增\")])],1),_c('el-table',{ref:\"multipleTable\",staticClass:\"table\",attrs:{\"data\":_vm.postTypeList,\"border\":\"\",\"header-cell-class-name\":\"table-header\"}},[_c('el-table-column',{attrs:{\"prop\":\"postTypeId\",\"label\":\"类型id\",\"align\":\"center\"}}),_c('el-table-column',{attrs:{\"prop\":\"postTypeDetail\",\"label\":\"类型名\",\"align\":\"center\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\",\"align\":\"center\",\"fixed\":\"right\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"text\",\"icon\":\"el-icon-edit\"},on:{\"click\":function($event){return _vm.handleEdit(scope.$index, scope.row)}}},[_vm._v(\"修改\")]),_c('el-button',{staticClass:\"red\",attrs:{\"type\":\"text\",\"icon\":\"el-icon-delete\"},on:{\"click\":function($event){return _vm.handleDelete(scope.$index, scope.row)}}},[_vm._v(\"删除\")])]}}])})],1),_c('div',{staticClass:\"pagination\"},[_c('el-pagination',{attrs:{\"background\":\"\",\"layout\":\"total, prev, pager, next\",\"current-page\":_vm.currentPage,\"page-size\":_vm.pageSize,\"total\":_vm.total},on:{\"current-change\":_vm.handlePageChange,\"prev-click\":_vm.handlePagePrev,\"next-click\":_vm.handlePageNext}})],1)],1),_c('el-dialog',{attrs:{\"title\":\"修改\",\"visible\":_vm.editVisible,\"width\":\"30%\",\"show-close\":false,\"close-on-click-modal\":false},on:{\"update:visible\":function($event){_vm.editVisible=$event}}},[_c('el-form',{ref:\"editForm\",attrs:{\"model\":_vm.editForm,\"rules\":_vm.rules,\"label-width\":\"90px\"}},[_c('el-form-item',{attrs:{\"label\":\"类型Id\"}},[_c('el-input',{attrs:{\"disabled\":true},model:{value:(_vm.editForm.postTypeId),callback:function ($$v) {_vm.$set(_vm.editForm, \"postTypeId\", $$v)},expression:\"editForm.postTypeId\"}})],1),_c('el-form-item',{attrs:{\"label\":\"类型名称\",\"prop\":\"postTypeDetail\"}},[_c('el-input',{model:{value:(_vm.editForm.postTypeDetail),callback:function ($$v) {_vm.$set(_vm.editForm, \"postTypeDetail\", $$v)},expression:\"editForm.postTypeDetail\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":_vm.cancelEdit}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.saveEdit('editForm')}}},[_vm._v(\"确 定\")])],1)],1),_c('el-dialog',{attrs:{\"title\":\"新增\",\"visible\":_vm.addVisible,\"width\":\"30%\",\"show-close\":false,\"close-on-click-modal\":false},on:{\"update:visible\":function($event){_vm.addVisible=$event}}},[_c('el-form',{ref:\"addForm\",attrs:{\"model\":_vm.addForm,\"rules\":_vm.rules,\"label-width\":\"90px\"}},[_c('el-form-item',{attrs:{\"label\":\"类型名称\",\"prop\":\"postTypeDetail\"}},[_c('el-input',{model:{value:(_vm.addForm.postTypeDetail),callback:function ($$v) {_vm.$set(_vm.addForm, \"postTypeDetail\", $$v)},expression:\"addForm.postTypeDetail\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":_vm.cancelAdd}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.saveAdd('addForm')}}},[_vm._v(\"确 定\")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <div class=\"crumbs\">\n            <el-breadcrumb separator=\"/\">\n                <el-breadcrumb-item>\n                    <i class=\"el-icon-lx-cascades\"></i> 帖子/楹联类型管理\n                </el-breadcrumb-item>\n            </el-breadcrumb>\n        </div>\n        <div class=\"container\">\n            <div class=\"handle-box\">\n                <el-input @keyup.enter.native=\"handleSearch\" v-model=\"inputKey\" placeholder=\"类型名\" class=\"handle-input mr10\"></el-input>\n                <el-button type=\"primary\" icon=\"el-icon-refresh\" @click=\"handleRefresh\">刷新</el-button>\n                <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"handleSearch\">搜索</el-button>\n                <el-button type=\"primary\" icon=\"el-icon-plus\" @click=\"handleAdd\">新增</el-button>\n            </div>\n            <el-table\n                :data=\"postTypeList\"\n                border\n                class=\"table\"\n                ref=\"multipleTable\"\n                header-cell-class-name=\"table-header\"\n            >\n                <el-table-column prop=\"postTypeId\" label=\"类型id\" align=\"center\"></el-table-column>\n                <el-table-column prop=\"postTypeDetail\" label=\"类型名\" align=\"center\"></el-table-column>\n                <el-table-column label=\"操作\" align=\"center\" fixed=\"right\">\n                    <template slot-scope=\"scope\">\n                        <el-button\n                            type=\"text\"\n                            icon=\"el-icon-edit\"\n                            @click=\"handleEdit(scope.$index, scope.row)\"\n                        >修改</el-button>\n                        <el-button\n                            type=\"text\"\n                            icon=\"el-icon-delete\"\n                            class=\"red\"\n                            @click=\"handleDelete(scope.$index, scope.row)\"\n                        >删除</el-button>\n                    </template>\n                </el-table-column>\n            </el-table>\n            <div class=\"pagination\">\n                <el-pagination\n                    background\n                    layout=\"total, prev, pager, next\"\n                    :current-page=\"currentPage\"\n                    :page-size=\"pageSize\"\n                    :total=\"total\"\n                    @current-change=\"handlePageChange\"\n                    @prev-click=\"handlePagePrev\"\n                    @next-click=\"handlePageNext\"\n                ></el-pagination>\n            </div>\n        </div>\n\n        <el-dialog title=\"修改\" :visible.sync=\"editVisible\" width=\"30%\" :show-close=\"false\" :close-on-click-modal=\"false\">\n            <el-form ref=\"editForm\" :model=\"editForm\" :rules=\"rules\" label-width=\"90px\">\n                <el-form-item label=\"类型Id\">\n                    <el-input v-model=\"editForm.postTypeId\" :disabled=\"true\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"类型名称\" prop=\"postTypeDetail\">\n                    <el-input v-model=\"editForm.postTypeDetail\"></el-input>\n                </el-form-item>\n            </el-form>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"cancelEdit\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"saveEdit('editForm')\">确 定</el-button>\n            </span>\n        </el-dialog>\n\n        <el-dialog title=\"新增\" :visible.sync=\"addVisible\" width=\"30%\" :show-close=\"false\" :close-on-click-modal=\"false\">\n            <el-form ref=\"addForm\" :model=\"addForm\" :rules=\"rules\" label-width=\"90px\">\n                <el-form-item label=\"类型名称\" prop=\"postTypeDetail\">\n                    <el-input v-model=\"addForm.postTypeDetail\"></el-input>\n                </el-form-item>\n            </el-form>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"cancelAdd\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"saveAdd('addForm')\">确 定</el-button>\n            </span>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'TypeManage',\n    data() {\n        return {\n            inputKey: '',\n            allType: [],\n            postTypeList: [],\n            currentPage: 1,\n            pageSize: 10,\n            total: 0,\n            editForm: {},\n            editIndex: -1,\n            editVisible: false,\n            addVisible: false,\n            addForm: {},\n            rules: {\n                postTypeDetail:[\n                    {required: true, message: '请输入类型', trigger: 'blur'}\n                ]\n            }\n        };\n    },\n    activated() {\n        // 获取帖子类型，同步更改帖子类型和楹联类型\n        this.getAllType();\n    },\n    methods: {\n        // 从后端获取整个类型，保存起来\n        async getAllType() {\n            try {\n                const res = await this.$api.post.getPostTypeList();\n                this.allType = this.sortByPostTypeId(res.postType);   \n                this.total = res.total;    \n                this.getPostTypeList();        \n            } catch (error) {\n                this.$message({\n                    message: '获取类型失败',\n                    duration: 2000,\n                    type: 'error'\n                });\n                console.log(error);\n            }\n        },\n\n        // 自己实现分页和查询\n        getPostTypeList() {\n            if(!this.inputKey) {\n                let list = this.allType.filter((item, index) => {\n                    return index < (this.currentPage * this.pageSize) && index >= ((this.currentPage - 1) * this.pageSize)\n                });\n                this.postTypeList = list;\n            } else {\n                let list = this.allType.filter((item, index) => {\n                    return item.postTypeDetail.includes(this.inputKey);\n                });\n                list = list.filter((item, index) => {\n                    return index < (this.currentPage * this.pageSize) && index >= ((this.currentPage - 1) * this.pageSize)\n                });\n                this.postTypeList = list;\n            }\n        },\n\n        // 根据id排序\n        sortByPostTypeId(array){\n            return array.sort(function(a, b) {\n                var id1 = a.postTypeId;\n                var id2 = b.postTypeId;\n                return id1 < id2 ? -1 : id1 > id2 ? 1 : 0;\n            })\n        },\n\n        //触发刷新\n        handleRefresh() {\n            let messageObject = this.$message('刷新中');\n            this.currentPage = 1;\n            this.inputKey = '';\n            this.getAllType();\n            messageObject.close();\n        },\n\n        // 触发搜索按钮\n        handleSearch() {\n            this.currentPage = 1;\n            this.getPostTypeList();\n            this.total = this.postTypeList.length;\n        },\n\n        // 分页导航\n        handlePageChange(val) {\n            this.currentPage = val;\n            this.getPostTypeList();\n        },\n\n        handlePagePrev(){\n            this.currentPage--;\n        },\n\n        handlePageNext(){\n            this.currentPage++;\n        },\n\n        // 删除操作\n        handleDelete(index, row) {\n            this.$confirm('该类型将永远删除，确定要继续吗', '提示', {\n                type: 'warning',\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n            }).then(async () => {\n                let postParams = {\n                    postTypeId: row.postTypeId\n                };\n                let coupletParams = {\n                    coupletTypeId: row.postTypeId\n                };\n                try {\n                    await Promise.all([\n                        this.$api.deletePostType(postParams),\n                        this.$api.deleteCoupletType(coupletParams)\n                    ]);\n                    this.$message({\n                        message: '删除成功',\n                        duration: 2000,\n                        type: 'success'\n                    });\n                    this.getAllType();\n                } catch (error) {\n                    this.$message({\n                        message: '删除失败',\n                        duration: 2000,\n                        type: 'error'\n                    });\n                    console.log(error);\n                }\n            }).catch(() => {\n                this.$message({\n                    message: '操作已取消',\n                    duration: 1500,\n                    type: 'info'\n                });\n            })\n        },\n\n        // 编辑操作\n        handleEdit(index, row) {\n            this.editIndex = index;\n            this.editForm = JSON.parse(JSON.stringify(row));\n            this.editVisible = true;\n        },\n\n        // 提交修改\n        saveEdit (formName) {\n            this.$refs[formName].validate(async (valid) => {\n                if(valid) {\n                    this.editVisible = false;\n                    let coupletForm = {\n                        coupletTypeId: this.editForm.postTypeId,\n                        coupletTypeDetail: this.editForm.postTypeDetail\n                    };\n                    try {\n                        await Promise.all([\n                            this.$api.post.modifyPostType(this.editForm),\n                            this.$api.couplet.modifyCoupletType(coupletForm)\n                        ]);\n                        this.$message({\n                            message: '修改成功',\n                            duration: 2000,\n                            type: 'success'\n                        });\n                        // 触发更新视图，如果是新增的属性，双向绑定不会同步更改\n                        this.$set(this.postTypeList, this.editIndex, this.editForm);\n                        this.$set(this.allType, (this.currentPage - 1) * this.pageSize + this.editIndex, this.editForm);\n                    } catch (error) {\n                        this.$message({\n                            message: '更新失败',\n                            duration: 2000,\n                            type: 'error'\n                        });\n                        console.log(error);\n                    }                    \n                } else {\n                    console.log('修改类型表单验证失败');\n                    return false;\n                }\n            });\n        },\n\n        // 撤销修改\n        cancelEdit() {\n            this.editVisible = false;\n            this.$message({\n                message: '操作取消',\n                duration: 1500,\n                type: 'info'\n            });\n            this.editForm = {};\n            this.$refs['editForm'].clearValidate();\n        },\n\n        // 添加操作\n        handleAdd() {\n            this.addVisible = true;\n            this.addForm = {\n                postTypeDetail: ''\n            };\n        },\n\n        cancelAdd() {\n            this.addVisible = false;\n            this.$message({\n                message: '操作已取消',\n                duration: 1500,\n                type: 'info'\n            });\n            this.addForm = {};\n            this.$refs['addForm'].clearValidate();\n        },\n\n        saveAdd(formName) {\n            this.$refs[formName].validate(async (valid) => {\n                if(valid) {\n                    this.addVisible = false;\n                    let coupletParams = {\n                        coupletTypeDetail: this.addForm.postTypeDetail\n                    };\n                    try {\n                        await Promise.all([\n                            this.$api.post.addPostType(this.addForm),\n                            this.$api.couplet.addCoupletType(coupletParams)\n                        ]);\n                        this.$message({\n                            message: '添加成功',\n                            duration: 2000,\n                            type: 'success'\n                        });\n                        // 重新拉取数据\n                        this.getAllType();\n                        this.getPostTypeList();\n                    } catch (error) {\n                        this.$message({\n                            message: '添加失败',\n                            duration: 2000,\n                            type: 'error'\n                        });\n                        console.log(error);\n                    }\n                } else {\n                    console.log('新增类型表单验证失败');\n                    return false;\n                }\n            });\n\n        },\n\n    }\n};\n</script>\n\n<style scoped>\n.handle-box {\n    margin-bottom: 20px;\n}\n\n.handle-select {\n    width: 120px;\n}\n\n.handle-input {\n    width: 300px;\n    display: inline-block;\n}\n.table {\n    width: 100%;\n    font-size: 14px;\n}\n.red {\n    color: #ff0000;\n}\n.mr10 {\n    margin-right: 10px;\n}\n.table-td-thumb {\n    display: block;\n    margin: auto;\n    width: 40px;\n    height: 40px;\n}\n</style>\n","import mod from \"-!../../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/@vue/cli-service/node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./TypeManage.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/@vue/cli-service/node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./TypeManage.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TypeManage.vue?vue&type=template&id=4a5f6dd3&scoped=true&\"\nimport script from \"./TypeManage.vue?vue&type=script&lang=js&\"\nexport * from \"./TypeManage.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TypeManage.vue?vue&type=style&index=0&id=4a5f6dd3&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4a5f6dd3\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}